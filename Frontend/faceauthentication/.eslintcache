[{"D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\index.js":"1","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\App.js":"2","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\reportWebVitals.js":"3","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\register.component.js":"4","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\Progress.js":"5","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\firebase\\index.js":"6","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\login.component.js":"7","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\user.component.js":"8","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\navbar.component.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":712,"mtime":1609432516407,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":5849,"mtime":1609434743472,"results":"14","hashOfConfig":"11"},{"size":547,"mtime":1602951859759,"results":"15","hashOfConfig":"11"},{"size":665,"mtime":1602951860148,"results":"16","hashOfConfig":"11"},{"size":5523,"mtime":1609434711737,"results":"17","hashOfConfig":"11"},{"size":444,"mtime":1609435157489,"results":"18","hashOfConfig":"11"},{"size":1185,"mtime":1609432619009,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1rb0umk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\index.js",[],["42","43"],"D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\App.js",["44"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RegisterComponent from \"./components/register.component\";\nimport LoginComponent from \"./components/login.component\";\nimport UserComponent from \"./components/user.component\";\nimport NavbarComponent from \"./components/navbar.component\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <NavbarComponent />\n      <Router>\n        <Route path=\"/\" exact component={LoginComponent} />\n        <Route path=\"/register\" exact component={RegisterComponent} />\n        <Route path=\"/user\" exact component={UserComponent} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\reportWebVitals.js",[],"D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\register.component.js",["45","46","47","48"],"import React, { useState, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport axios from \"axios\";\r\nimport { storage } from \"../firebase\";\r\nimport Progress from \"./Progress\";\r\n\r\nexport default function RegisterComponent() {\r\n  //states for webcam\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(\r\n    \"https://i.stack.imgur.com/l60Hf.png\"\r\n  );\r\n\r\n  //states for send image to firebase\r\n\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [uploadPercentage, setuploadPercentage] = useState(0);\r\n\r\n  //states for send backend data\r\n  const [userId, setuserId] = useState(\"\");\r\n  const [userName, setuserName] = useState(\"\");\r\n\r\n  //method for capture an image\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    //console.log(imageSrc);\r\n  }, [webcamRef, setImgSrc]);\r\n\r\n  function uploadImage(e) {\r\n    e.preventDefault();\r\n\r\n    if (imgSrc !== null) {\r\n      const fileName = Math.floor(Math.random() * 100000 + 1) + \".jpg\";\r\n      const uploadTask = storage\r\n        .ref(`faceauth/${fileName}`)\r\n        .putString(imgSrc, \"data_url\", { contentType: \"image/jpeg\" });\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          //progress function\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setuploadPercentage(progress);\r\n        },\r\n        (error) => {\r\n          //error function\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          //complete function\r\n          storage\r\n            .ref(\"faceauth\")\r\n            .child(fileName)\r\n            .getDownloadURL()\r\n            .then((urlFirebase) => {\r\n              console.log(\"Image Url is = \" + urlFirebase);\r\n              setImageURL(urlFirebase);\r\n\r\n              const config = {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                  \"Ocp-Apim-Subscription-Key\":\r\n                    \"a680691db6174916bb8819e75475a406\",\r\n                },\r\n              };\r\n\r\n              const newImageDetails = {\r\n                url: urlFirebase,\r\n              };\r\n\r\n              axios\r\n                .post(\r\n                  \"https://eastus.api.cognitive.microsoft.com/face/v1.0/largefacelists/hexalist/persistedfaces?detectionModel=detection_01\",\r\n                  newImageDetails,\r\n                  config\r\n                )\r\n                .then((response) => {\r\n                  console.log(\r\n                    \"Response for LargeFaceList is = \" +\r\n                      response.data.persistedFaceId\r\n                  );\r\n                  setuserId(response.data.persistedFaceId);\r\n                  alert(\"Image added to Large Face List\");\r\n\r\n                  const newUserReg = {\r\n                    userId: response.data.persistedFaceId,\r\n                    userName: userName,\r\n                  };\r\n\r\n                  axios\r\n                    .post(\r\n                      process.env.REACT_APP_BACKEND_URL + \"/users/add\",\r\n                      newUserReg\r\n                    )\r\n                    .then(() => {\r\n                      const configTrain = {\r\n                        headers: {\r\n                          \"Ocp-Apim-Subscription-Key\":\r\n                            \"a680691db6174916bb8819e75475a406\",\r\n                        },\r\n                      };\r\n                      alert(\"User Details sent to the Database\");\r\n                      axios\r\n                        .post(\r\n                          \"https://eastus.api.cognitive.microsoft.com/face/v1.0/largefacelists/hexalist/train\",\r\n                          \"\",\r\n                          configTrain\r\n                        )\r\n                        .then(() => {\r\n                          alert(\"Dataset Trained Successfully\");\r\n                          window.location = \"/\";\r\n                        })\r\n                        .catch((err) => {\r\n                          alert(err);\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                      alert(err);\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                  alert(err.message);\r\n                });\r\n            });\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"First You Must Select An Image\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <h1 className=\"text-center\">HexaAuth Register</h1>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <Webcam audio={false} ref={webcamRef} screenshotFormat=\"image/jpeg\" />\r\n          <button className=\"btn btn-warning\" onClick={capture}>\r\n            Capture photo\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {\" \"}\r\n          {imgSrc && (\r\n            <>\r\n              {\" \"}\r\n              <div class=\"form-group\">\r\n                <img src={imgSrc} style={{ width: \"300px\" }} />{\" \"}\r\n              </div>\r\n              <br />\r\n              <div class=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Your Name\"\r\n                  onChange={(e) => {\r\n                    setuserName(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div class=\"form-group\">\r\n                <Progress percentage={uploadPercentage} />\r\n              </div>\r\n              <br />\r\n              <button className=\"btn btn-success\" onClick={uploadImage}>\r\n                Register\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\Progress.js",[],"D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\firebase\\index.js",[],"D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\login.component.js",["49","50","51","52"],"import React, { useState, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport axios from \"axios\";\r\nimport { storage } from \"../firebase\";\r\nimport Progress from \"./Progress\";\r\n\r\nexport default function LoginComponent() {\r\n  //states for webcam\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(\r\n    \"https://i.stack.imgur.com/l60Hf.png\"\r\n  );\r\n\r\n  //states for send image to firebase\r\n\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [uploadPercentage, setuploadPercentage] = useState(0);\r\n\r\n  //states for send backend data\r\n  const [userId, setuserId] = useState(\"\");\r\n\r\n  //method for capture an image\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    //console.log(imageSrc);\r\n  }, [webcamRef, setImgSrc]);\r\n\r\n  function uploadImage(e) {\r\n    e.preventDefault();\r\n\r\n    if (imgSrc !== null) {\r\n      const fileName = Math.floor(Math.random() * 100000 + 1) + \".jpg\";\r\n      const uploadTask = storage\r\n        .ref(`facelogin/${fileName}`)\r\n        .putString(imgSrc, \"data_url\", { contentType: \"image/jpeg\" });\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          //progress function\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setuploadPercentage(progress);\r\n        },\r\n        (error) => {\r\n          //error function\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          //complete function\r\n          storage\r\n            .ref(\"facelogin\")\r\n            .child(fileName)\r\n            .getDownloadURL()\r\n            .then((urlFirebase) => {\r\n              console.log(\"Image Url is = \" + urlFirebase);\r\n              setImageURL(urlFirebase);\r\n\r\n              const config = {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                  \"Ocp-Apim-Subscription-Key\":\r\n                    \"a680691db6174916bb8819e75475a406\",\r\n                },\r\n              };\r\n\r\n              const newImageDetails = {\r\n                url: urlFirebase,\r\n              };\r\n\r\n              axios\r\n                .post(\r\n                  \"https://eastus.api.cognitive.microsoft.com/face/v1.0/detect?returnFaceId=true&returnFaceLandmarks=false&recognitionModel=recognition_03&returnRecognitionModel=false&detectionModel=detection_02&faceIdTimeToLive=86400\",\r\n                  newImageDetails,\r\n                  config\r\n                )\r\n                .then((response) => {\r\n                  console.log(\r\n                    \"Response for face detect is = \" + response.data[0].faceId\r\n                  );\r\n                  setuserId(response.data[0].faceId);\r\n                  alert(\"Face Detect Successfully\");\r\n\r\n                  const newUserLogin = {\r\n                    faceId: response.data[0].faceId,\r\n                    largeFaceListId: \"hexalist\",\r\n                    maxNumOfCandidatesReturned: 10,\r\n                    mode: \"matchPerson\",\r\n                  };\r\n\r\n                  axios\r\n                    .post(\r\n                      \"https://eastus.api.cognitive.microsoft.com/face/v1.0/findsimilars\",\r\n                      newUserLogin,\r\n                      config\r\n                    )\r\n                    .then((res) => {\r\n                      console.log(res.data[0].persistedFaceId);\r\n\r\n                      alert(\"Face Verify Successfully\");\r\n\r\n                      axios\r\n                        .get(\r\n                          process.env.REACT_APP_BACKEND_URL +\r\n                            \"/users/\" +\r\n                            res.data[0].persistedFaceId\r\n                        )\r\n                        .then((res) => {\r\n                          console.log(res.data.userName);\r\n                          localStorage.setItem(\"UserName\", res.data.userName);\r\n                          window.location = \"/user\";\r\n                        })\r\n                        .catch((err) => {\r\n                          alert(err);\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                      alert(err);\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                  alert(err.message);\r\n                });\r\n            });\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"First You Must Select An Image\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <h1 className=\"text-center\">HexaAuth Login </h1>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <Webcam audio={false} ref={webcamRef} screenshotFormat=\"image/jpeg\" />\r\n          <button className=\"btn btn-warning\" onClick={capture}>\r\n            Capture photo\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {\" \"}\r\n          {imgSrc && (\r\n            <>\r\n              {\" \"}\r\n              <div class=\"form-group\">\r\n                <img src={imgSrc} style={{ width: \"300px\" }} />{\" \"}\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div class=\"form-group\">\r\n                <Progress percentage={uploadPercentage} />\r\n              </div>\r\n              <br />\r\n              <button className=\"btn btn-primary\" onClick={uploadImage}>\r\n                Login\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\user.component.js",[],"D:\\education\\Node.js-Expess-MongoDB-CRUD-master\\FaceAutheticationProject\\Frontend\\faceauthentication\\src\\components\\navbar.component.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":33},{"ruleId":"57","severity":1,"message":"62","line":16,"column":10,"nodeType":"59","messageId":"60","endLine":16,"endColumn":18},{"ruleId":"57","severity":1,"message":"63","line":20,"column":10,"nodeType":"59","messageId":"60","endLine":20,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":152,"column":17,"nodeType":"66","endLine":152,"endColumn":64},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":33},{"ruleId":"57","severity":1,"message":"62","line":16,"column":10,"nodeType":"59","messageId":"60","endLine":16,"endColumn":18},{"ruleId":"57","severity":1,"message":"63","line":20,"column":10,"nodeType":"59","messageId":"60","endLine":20,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":151,"column":17,"nodeType":"66","endLine":151,"endColumn":64},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'imageURL' is assigned a value but never used.","'userId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]